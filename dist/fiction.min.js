(function(l,e){typeof exports=="object"&&typeof module<"u"?e(exports,require("@mundorum/oid/oid.js")):typeof define=="function"&&define.amd?define(["exports","@mundorum/oid/oid.js"],e):(l=typeof globalThis<"u"?globalThis:l||self,e(l.fiction={},l.oidlib))})(this,function(l,e){"use strict";class a extends e.OidUI{async connectedCallback(){await super.connectedCallback(),this.handleSend()}handleProcess(n,t){this._callCustom("process",t)}handleSend(n,t){let i=this.speech||"";t?i.includes("{{")?i=i.replace(/{{[ \t]*([^}]*)}}/g,(r,s)=>(s=s?s.trim():"value",t[s]?t[s]:"")):t.value&&(i+=t.value.replace(/\n/g,"<br>")):i=i.replace(/{{[ \t]*[^}]*}}/g,""),this._presentation.querySelector("#speech").innerHTML=i,this._notify("update",{value:i})}handleClear(){this._presentation.querySelector("#speech").innerHTML=""}}e.Oid.component({id:"foid:lively-talk",element:"lively-talk-oid",properties:{character:{default:"assets:images/dino.svg"},bubble:{default:"assets:images/bubble-landscape.svg"},speech:{}},receive:{process:"handleProcess",display:"handleSend",clear:"handleClear"},provide:["itf:transfer"],implementation:a,styles:e.css`
  .character {
    width: 128px;
  }
  .bubble {
    background-repeat: no-repeat;
    background-size: 100% 100%;
    flex-basis: 100%;
    padding: 15px 15px 10px 40px;
    background-image: url("{{url:this.bubble}}");
  }
  .speech {
    font-size: 2.5vh;
    inline-size: 100%;
    overflow-wrap: break-word;
  }`,template:e.html`
  <div id="oid-prs" style="width:100%;display:flex;flex-direction:row">
    <img src="{{url:this.character}}" class="character">
    <div class="bubble"><div class="speech" id="speech"></div></div>
  </div>`}),l.LivelyTalkOid=a,Object.defineProperty(l,Symbol.toStringTag,{value:"Module"})});
